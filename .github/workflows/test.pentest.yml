name: Pentest

on:
    workflow_call:
        secrets:
            AZURE_CLIENT_ID:
                required: true
            AZURE_TENANT_ID:
                required: true
            AZURE_SUBSCRIPTION_ID:
                required: true
        inputs:
            tag:
                type: string
                required: true
permissions:
    id-token: write
    contents: read
jobs:
    create_resource_group:
        uses: Breizhsport-cesi-pau/breizhsport-front/.github/workflows/azure.resource-group.create.yml@develop
        secrets:
            AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
            AZURE_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
            AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
        with:
            resource_group_name: pentest-${{github.sha}}
    create_aks:
        needs: [create_resource_group]
        uses: Breizhsport-cesi-pau/breizhsport-front/.github/workflows/azure.aks.create.yml@develop
        secrets:
            AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
            AZURE_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
            AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
        with:
            resource_group_name: pentest-${{github.sha}}
            aks_resource_group_name: pentest-${{github.sha}}-aks
            aks_name: pentest-aks
    deploy_on_aks:
        needs: [create_aks]
        runs-on: ubuntu-latest
        environment: prod
        steps:
            - uses: actions/checkout@v4
            - name: Azure login
              uses: azure/login@v2
              with:
                  client-id: ${{ secrets.AZURE_CLIENT_ID }}
                  tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                  subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            - name: Setup Helm
              uses: azure/setup-helm@v4.2.0
            - name: Setup kubectl
              uses: azure/setup-kubectl@v3
            - name: Setup kubelogin
              uses: azure/use-kubelogin@v1
              env:
                  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
              with:
                  kubelogin-version: latest
            - name: Set AKS context
              id: set-context
              uses: azure/aks-set-context@v3
              with:
                  resource-group: pentest-${{github.sha}}
                  cluster-name: 'pentest-aks'
                  admin: 'false'
                  use-kubelogin: 'true'
            - name: Install ingress nginx
              run: |
                  helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
                  helm repo update
                  helm install nginx-ingress ingress-nginx/ingress-nginx --namespace nginx --create-namespace
            - name: Sleep for 30 seconds
              run: |
                  echo waiting for the ip address to pick up
                  sleep 30s
            - name: Deploy front app
              run: |
                  kubectl apply -f test.yaml
                  sleep 20s
                  kubectl set image deployment/echo-app echo-app=keke65/breizhsport-front:${{inputs.tag}}
              shell: bash
            - name: Get public IP Adress
              id: ipAddress
              run: |
                  IP=$(kubectl get svc -n nginx nginx-ingress-ingress-nginx-controller -o json | jq -r '.status.loadBalancer.ingress[0].ip')
                  echo "the ip address is $IP"
                  echo "IPADDRESS=$IP" >> $GITHUB_OUTPUT
            - name: ZAP Scan
              uses: zaproxy/action-baseline@v0.14.0
              with:
                  target: 'http://${{steps.ipAddress.outputs.IPADDRESS}}'
                  allow_issue_writing: false
                  fail_action: false
    remove_resource_group:
        needs: [create_resource_group, create_aks, deploy_on_aks]
        if: always()
        uses: Breizhsport-cesi-pau/breizhsport-front/.github/workflows/azure.resource-group.delete.yml@develop
        secrets:
            AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
            AZURE_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
            AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
        with:
            resource_group_name: pentest-${{github.sha}}
    remove_aks_resource_group:
        needs: [create_resource_group, create_aks, deploy_on_aks]
        if: always()
        uses: Breizhsport-cesi-pau/breizhsport-front/.github/workflows/azure.resource-group.delete.yml@develop
        secrets:
            AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
            AZURE_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
            AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
        with:
            resource_group_name: pentest-${{github.sha}}-aks
